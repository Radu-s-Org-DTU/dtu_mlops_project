name: Unit Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  issues: write
  pull-requests: write

jobs:
  test:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: ["ubuntu-latest", "macos-latest"]
        python-version: ["3.12", "3.11"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install -U pip setuptools wheel
          pip install -r requirements.txt
          pip list

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/src" >> $GITHUB_ENV

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_KEY_JSON }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: "latest"
          project_id: "sage-dragon-448009-f7"

      - name: Run Ruff
        run: |
          ruff check .

      - name: Run tests & coverage
        run: |
          coverage run -m pytest tests/
          coverage report -m

      - name: Save Test Results and Coverage
        run: |
          mkdir -p artifacts
          coverage xml -o artifacts/coverage.xml
          pytest --junitxml=artifacts/test-results.xml
        continue-on-error: true

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: test-results-and-coverage
          path: artifacts/

      - name: Comment test results on PR
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            const testResultsPath = path.resolve('artifacts/test-results.xml');
            const coverageReportPath = path.resolve('artifacts/coverage.xml');

            let testResults = 'No test results found.';
            let coverageReport = 'No coverage report found.';

            if (fs.existsSync(testResultsPath)) {
              testResults = fs.readFileSync(testResultsPath, 'utf-8');
            }

            if (fs.existsSync(coverageReportPath)) {
              coverageReport = fs.readFileSync(coverageReportPath, 'utf-8');
            }

            const commentBody = `
            ### Test Results and Coverage

            **Test Results**:
            <details>
            <summary>View Test Results</summary>

            \`\`\`xml
            ${testResults}
            \`\`\`

            </details>

            **Coverage Report**:
            <details>
            <summary>View Coverage Report</summary>

            \`\`\`xml
            ${coverageReport}
            \`\`\`

            </details>
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody,
            });
